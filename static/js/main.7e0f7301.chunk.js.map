{"version":3,"sources":["spotify.js","Login.js","SidebarOption.js","DataLayer.js","Sidebar.js","BodyHeader.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","href","SidebarOption","title","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","alt","AccountBalanceIcon","SearchOutlinedIcon","QueueMusicOutlinedIcon","items","map","playlist","name","BodyHeader","user","token","placeholder","type","Avatar","images","url","display_name","SongRow","cover","album","artist","Body","spotify","discover_weekly","description","Footer","Grid","container","spacing","item","xs","Slider","Player","SpotifyWebApi","App","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7e0f7301.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst redirectUri = \"http://kresnofatih.github.io/spotifycloneappproject/\";\r\n\r\nconst clientId = \"5f6026d9984f4d938c9585b79e17dd33\";\r\n\r\nconst scopes=[\r\n    \"user-read-currently-playing\",\r\n    \"user-read-recently-played\",\r\n    \"user-read-playback-state\",\r\n    \"user-top-read\",\r\n    \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromUrl=()=>{\r\n    return window.location.hash.substring(1).split('&').reduce((initial, item)=>{\r\n        let parts = item.split('=');\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        return initial;\r\n    }, {});\r\n};\r\n\r\nexport const loginUrl =`${authEndpoint}?client_id=${clientId}\r\n&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}\r\n&response_type=token&show_dialog=true`;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport {loginUrl} from './spotify';\r\n\r\nfunction Login(){\r\n    return(\r\n        <div className=\"login\">\r\n            <img src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_CMYK_White.png\"/>\r\n            <a href={loginUrl}>LOGIN SPOTIFY</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({title, Icon}){\r\n    return(\r\n        <div className=\"sidebarOption\">\r\n            {Icon && <Icon className=\"sidebarOption_icon\"/>}\r\n            {Icon ? <p className=\"marginp\">{title}</p>: <p className=\"nomarginp\">{title}</p>}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarOption;","import React, {createContext, useContext, useReducer} from 'react';\r\n\r\nexport const DataLayerContext = createContext();\r\nexport const DataLayer = ({initialState, reducer, children})=>(\r\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </DataLayerContext.Provider>      \r\n);\r\n\r\nexport const useDataLayerValue = ()=>useContext(DataLayerContext);","import React from 'react';\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from './SidebarOption';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport QueueMusicOutlinedIcon from '@material-ui/icons/QueueMusicOutlined';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nfunction Sidebar(){\r\n\r\n    const [{playlists}, dispatch] = useDataLayerValue();\r\n\r\n    return(\r\n        <div className=\"sidebar\">\r\n            <img className=\"sidebar_logo\" src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_CMYK_White.png\" alt=\"\"/>\r\n            <SidebarOption Icon={AccountBalanceIcon} title=\"Home\"/>\r\n            <SidebarOption Icon={SearchOutlinedIcon} title=\"Search\"/>\r\n            <SidebarOption Icon={QueueMusicOutlinedIcon} title=\"Library\"/>\r\n            <h3 className=\"sidebar_title\">PLAYLISTS</h3>\r\n            <hr/>\r\n            {playlists?.items?.map(playlist=>(\r\n                <SidebarOption title={playlist.name}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport './BodyHeader.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Avatar } from '@material-ui/core';\r\nimport {useDataLayerValue} from './DataLayer';\r\n\r\nfunction BodyHeader() {\r\n    const [{user, token}, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className=\"bodyheader\">\r\n            <div className=\"header_left\">\r\n                <SearchIcon/>\r\n                <input placeholder=\"Search for Music or Podcasts\" type=\"text\"/>\r\n            </div>\r\n            <div className=\"header_right\">\r\n                <Avatar src={user?.images[0].url} alt={user?.display_name}/>\r\n                <h4>{user?.display_name}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BodyHeader;\r\n","import React from 'react';\r\nimport './SongRow.css';\r\n\r\nfunction SongRow({name, cover, album, artist}) {\r\n\r\n    return (\r\n        <div className=\"songrow\">\r\n            <img className=\"songrow_album\" src={cover} alt=\"\"/>\r\n            <div className=\"songrow_info\">\r\n                <h1>{name}</h1>\r\n                <div className=\"album_data\">\r\n                    <p className=\"albumname\">{album}</p>\r\n                    <p className=\"artistname\">{artist}</p>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SongRow;\r\n","import React, {useEffect, useState} from 'react';\r\nimport \"./Body.css\";\r\nimport BodyHeader from './BodyHeader';\r\nimport {useDataLayerValue} from './DataLayer';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\r\nimport SongRow from './SongRow';\r\n\r\nfunction Body({spotify}){\r\n    \r\n    const [{discover_weekly, user}, dispatch] = useDataLayerValue();\r\n    return(\r\n        <div className=\"body\">\r\n            <BodyHeader/>\r\n            <div className=\"body_info\">\r\n                <img src=\"https://cdn.medcom.id/dynamic/content/2016/08/03/564190/5ou8yCcBGe.jpg?w=1024\" alt=\"\"/>\r\n                <div className=\"body_infotext\">\r\n                    <strong>PLAYLIST</strong>\r\n                    <h2>Discover Weekly</h2>\r\n                    <p>{discover_weekly?.description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"body_songlist\">\r\n                <div className=\"songlist_header\">\r\n                    <PlayCircleFilledIcon className=\"songlist_play\"/>\r\n                    <MenuOpenIcon className=\"songlist_options\"/>\r\n                </div>\r\n                    <SongRow\r\n                        name = \"Sewindu\"\r\n                        cover = \"https://www.situstulus.com/wp-content/uploads/2020/02/COVER-ART-KUTSU-FIX-Small-227x227.jpg\"\r\n                        album = \"Diorama\"\r\n                        artist = \"Tulus\"\r\n                    />\r\n                    <SongRow\r\n                        name = \"Summer\"\r\n                        cover = \"https://fanart.tv/fanart/music/46eb0fb7-9725-43af-97d7-6c717682a799/albumcover/arcade-dreams-5ea08b169ab40.jpg\"\r\n                        album = \"Arcade Dreams\"\r\n                        artist = \"The Midnight\"\r\n                    />\r\n                    <SongRow\r\n                        name = \"Lost Stars\"\r\n                        cover = \"https://upload.wikimedia.org/wikipedia/en/7/77/Maroon_5_-_Overexposed.png\"\r\n                        album = \"Overexposed\"\r\n                        artist = \"Maroon5\"\r\n                    />\r\n                    <SongRow\r\n                        name = \"Starboy\"\r\n                        cover = \"https://i.pinimg.com/originals/48/24/93/48249335e8c3852d59a5a27e054bb8d2.jpg\"\r\n                        album = \"Starboy Album\"\r\n                        artist = \"the weeknd\"\r\n                    />\r\n                    <SongRow\r\n                        name = \"Sunday Morning\"\r\n                        cover = \"https://substreammagazine.com/wp-content/uploads/2017/05/it-wont-be-soon-maroon-5-album-art.jpg\"\r\n                        album = \"It Won't Be Soon Before Long\"\r\n                        artist = \"Maroon5\"\r\n                    />\r\n                    <SongRow\r\n                        name = \"Kumau Dia\"\r\n                        cover = \"https://i.scdn.co/image/ab67616d0000b27342ecaeec7fbe96cf69c8deb0\"\r\n                        album = \"Cinta Luar Biasa\"\r\n                        artist = \"Andmesh\"\r\n                    />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport \"./Footer.css\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\r\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport { Slider } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction Footer(){\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"footer_left\">\r\n                <img className=\"footer_img\" src=\"https://i.pinimg.com/564x/93/9f/be/939fbe6b2b6d393c61ce7d45de58c35d.jpg\" alt=\"\"/>\r\n                <div>\r\n                    <h4>Yeah!</h4>\r\n                    <p>Usher</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer_center\">\r\n                <FastRewindIcon className=\"footer_icon\" />\r\n                <SkipPreviousIcon className=\"footer_icon\"/>\r\n                <PlayArrowIcon className=\"footer_icon\"/>\r\n                <SkipNextIcon className=\"footer_icon\"/>\r\n                <FastForwardIcon className=\"footer_icon\"/>\r\n            </div>\r\n            <div className=\"footer_right\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <PlaylistPlayIcon className=\"footer_icon\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <VolumeDownIcon/>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Slider/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction Player({spotify}){\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"player_body\">\r\n                <Sidebar/>\r\n                <Body/>\r\n            </div>\r\n                <Footer/>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './Login.js';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from './Player';\nimport {useDataLayerValue} from './DataLayer';\nimport { DataLayer } from './DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{user, token}, dispatch] = useDataLayerValue();\n\n  useEffect(()=>{\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    \n    if (_token!=null){\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      })\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user)=>{\n        dispatch({\n          type: 'SET_USER',\n          user: user,\n        })\n      })\n\n      spotify.getUserPlaylists().then((playlists)=>{\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists,\n        })\n      })\n      spotify.getPlaylist('37i9dQZEVXcSGo76PTX7D2').then(response=>{\n        dispatch({\n          type: 'SET_DISCOVERWEEKLY',\n          discover_weekly: response,\n        })\n      })\n    }\n    \n  }, [])\n\n  return (\n    <div className=\"App\">\n      {token ? <Player spotify={spotify}/> : <Login/>}\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useContext } from \"react\";\r\n\r\nexport const initialState = {\r\n    user: null,\r\n    playlists: [],\r\n    playing: false,\r\n    item: null,\r\n    discover_weekly: [],\r\n    token: null,\r\n    // token: \"BQD9j2A_KoANJos_XOdQGZcEMCxjbeo1u9IdlVz_wc3uTnCEJRCv2eu1PzxyHe-m74EHm-3p4E8bGhJZ3tImwadPhcbsl3RCqQLAHkgY08VWD1ZiPA2-NR0trsOcMzyc9R4G7Oxs-OWCBS2E7HuV6f4WX04H1MubeqtQFRlQaHE8ALlx\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    // console.log(action);\r\n    switch(action.type){\r\n        case 'SET_DISCOVERWEEKLY':\r\n            return {\r\n                ...state, discover_weekly: action.discover_weekly,\r\n            }\r\n        case 'SET_PLAYLISTS':\r\n            return {\r\n                ...state, playlists: action.playlists,\r\n            };\r\n        case 'SET_TOKEN':\r\n            return {\r\n                ...state, token: action.token,\r\n            };\r\n        case 'SET_USER':\r\n            return {\r\n                ...state, user:action.user,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {DataLayer} from './DataLayer';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}